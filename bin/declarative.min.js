/*

 declarative - Mapper for custom user interface markup - version 1.0.2

 Copyright 2012, Alex Lawrence
 Licensed under the MIT license.
 http://www.opensource.org/licenses/MIT

*/
(function(a,b){typeof exports==="object"?module.exports=b():typeof define==="function"&&define.amd?define(b):a.declarative=b()})(this,function(){var a={};(function(){var b=a.array={};b.ensureArray=function(a){return b.isArray(a)?a:[a]};b.isArray=function(a){return Object.prototype.toString.call(a)==="[object Array]"};b.indexOf=function(a,h){for(var b=0,g=a.length;b<g;b++)if(a[b]==h)return b;return-1}})();(function(){a.isDOMElement=function(a){return a&&(a.nodeType===b||a.nodeType===m)};var b=1,m=
9})();(function(){a.parseOptions=function(a){return b(a)};var b=function(a){eval("var output = {"+a+"};");return output}})();(function(){var b=a.isDOMElement;a.getSpecifiedAttributes=function(a){if(!b(a))throw Error("declarative.getSpecifiedAttributes: invalid element (DOM element required)");for(var a=a.attributes,h,d={},g=0,e=a.length;g<e;g++)if(h=a[g],h.specified)d[h.nodeName]=h.nodeValue;return d}})();(function(){var b=a.array.isArray,m=a.array.ensureArray;a.mappings={};var h=a.mappingModes={attribute:"attribute",
element:"element"};a.mappings.clear=function(){i={}};a.mappings.add=function(a){for(var a=m(a),b=0,f=a.length;b<f;b++){var j=a[b],c=j;c||g("add","invalid options");c.id||g("add","missing id");c.types||g("add","missing types");c.types&&!c.types.push&&g("add","invalid types");(!c.callback||typeof c.callback!=="function")&&g("add","invalid callback");c.mappingMode&&c.mappingMode!==h.attribute&&c.mappingMode!==h.element&&g("add","invalid mappingMode");var k;a:{k=c.id;var d=void 0;for(d in i)if(i.hasOwnProperty(d)&&
d==k){k=true;break a}k=false}k&&g("add",'duplicate id "'+c.id+'"');c=j;c.prefix=c.prefix||"";c.mappingMode=c.mappingMode||h.attribute;c=j;c.prefix=c.prefix.toLowerCase();c.convertedTypes=[];k=0;for(d=c.types.length;k<d;k++){var o=e(c.types[k]);c.convertedTypes.push(c.prefix+o)}i[j.id]=j}};a.mappings.getAll=function(){var a=[],b;for(b in i)i.hasOwnProperty(b)&&a.push(i[b]);return a};a.mappings.get=function(a){if(!b(a))return d(a);for(var e=[],g=0,f=a.length;g<f;g++)e.push(d(a[g]));return e};var d=
function(a){i[a]||g("get",'invalid id "'+a+'"');return i[a]},g=function(a,b){throw Error("declarative.mappings."+a+": "+b);},e=function(a){return a.replace(f,function(a,b){return"-"+b.toLowerCase()})},i={},f=RegExp(/([A-Z])/g)})();(function(){var b=a.array.ensureArray,m=a.isDOMElement,h=a.mappingModes;a.apply=function(g){var e=a.mappings.get(g),e=b(e);return{to:function(a){d(e,a)}}};a.applyAllMappings=function(){var b=a.mappings.getAll();return{to:function(a){d(b,a)}}};var d=function(b,e){if(!m(e))throw Error("declarative.apply.to: invalid element (DOM object required)");
var i;if(e.querySelectorAll){i=e;var f={};f[h.attribute]=[];f[h.element]=[];for(var d=0,l=b.length;d<l;d++){var n=b[d];f[n.mappingMode]=f[n.mappingMode].concat(n.convertedTypes)}(d=f[h.attribute].join("],["))&&(d="["+d+"]");f=f[h.element].join(",");i=i.querySelectorAll(d+(d&&f?",":"")+f)}else i=e.all?e.all:e.getElementsByTagName("*");for(var d=i.length,j,l=0,n=b.length,c=0,k=0;e;){for(l=0;l<n;l++){f=b[l];for(c=0,k=f.convertedTypes.length;c<k;c++){if(f.mappingMode===h.attribute&&(j=e.getAttributeNode&&
e.getAttributeNode(f.convertedTypes[c]))&&j.specified)j=a.parseOptions(j.nodeValue),f.callback(e,f.types[c],j);f.mappingMode===h.element&&e.nodeName.toLowerCase()==f.convertedTypes[c]&&(j=a.getSpecifiedAttributes(e),f.callback(e,f.types[c],j))}}e=d&&i[--d]}}})();return a});
