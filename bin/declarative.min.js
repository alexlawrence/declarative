/*

 declarative - Mapper for custom user interface markup - version 1.0.5

 Copyright 2012, Alex Lawrence
 Licensed under the MIT license.
 http://www.opensource.org/licenses/MIT

*/
(function(a,d){typeof exports==="object"?module.exports=d():typeof define==="function"&&define.amd?define(d):a.declarative=d()})(this,function(){var a={},d,i;(function(){var a=d={};a.ensureArray=function(k){return a.isArray(k)?k:[k]};a.isArray=function(a){return Object.prototype.toString.call(a)==="[object Array]"};a.indexOf=function(a,h){for(var e=0,g=a.length;e<g;e++)if(a[e]==h)return e;return-1}})();(function(){i=function(h){return h&&(h.nodeType===a||h.nodeType===k)};var a=1,k=9})();(function(){var d=
i;a.getSpecifiedAttributes=function(a){if(!d(a))throw Error("declarative.getSpecifiedAttributes: invalid element (DOM element required)");for(var a=a.attributes,h,e={},g=0,f=a.length;g<f;g++)if(h=a[g],h.specified)e[h.nodeName]=h.nodeValue;return e}})();(function(){a.parseOptions=function(a){try{return d(a)}catch(h){throw Error("declarative.parseOptions: Parsing error");}};var d=function(a){return eval("output = {"+a+"}")}})();(function(){var i=d.isArray,k=d.ensureArray;a.mappings={};var h=a.mappingModes=
{attribute:"attribute",element:"element"};a.mappings.clear=function(){l={}};a.mappings.add=function(a){for(var a=k(a),b=0,e=a.length;b<e;b++){var j=a[b],c=j;c||g("add","invalid options");c.id||g("add","missing id");c.types||g("add","missing types");c.types&&!c.types.push&&g("add","invalid types");(!c.callback||typeof c.callback!=="function")&&g("add","invalid callback");c.mappingMode&&c.mappingMode!==h.attribute&&c.mappingMode!==h.element&&g("add","invalid mappingMode");var d;a:{d=c.id;var i=void 0;
for(i in l)if(l.hasOwnProperty(i)&&i==d){d=true;break a}d=false}d&&g("add",'duplicate id "'+c.id+'"');c=j;c.prefix=c.prefix||"";c.mappingMode=c.mappingMode||h.attribute;c=j;c.prefix=c.prefix.toLowerCase();c.convertedTypes=[];d=0;for(i=c.types.length;d<i;d++){var m=f(c.types[d]);c.convertedTypes.push(c.prefix+m)}l[j.id]=j}};a.mappings.getAll=function(){var a=[],b;for(b in l)l.hasOwnProperty(b)&&a.push(l[b]);return a};a.mappings.get=function(a){if(!i(a))return e(a);for(var b=[],f=0,g=a.length;f<g;f++)b.push(e(a[f]));
return b};var e=function(a){l[a]||g("get",'invalid id "'+a+'"');return l[a]},g=function(a,b){throw Error("declarative.mappings."+a+": "+b);},f=function(a){return a.replace(b,function(a,b){return"-"+b.toLowerCase()})},l={},b=RegExp(/([A-Z])/g)})();(function(){var m=d.ensureArray,k=i,h=a.mappingModes;a.apply=function(g){var f=a.mappings.get(g),f=m(f);return{to:function(a){e(f,a)}}};a.applyAllMappings=function(){var g=a.mappings.getAll();return{to:function(a){e(g,a)}}};var e=function(g,f){if(!k(f))throw Error("declarative.apply.to: invalid element (DOM object required)");
var d;if(f.querySelectorAll){d=f;var b={};b[h.attribute]=[];b[h.element]=[];for(var e=0,i=g.length;e<i;e++){var n=g[e];b[n.mappingMode]=b[n.mappingMode].concat(n.convertedTypes)}(e=b[h.attribute].join("],["))&&(e="["+e+"]");b=b[h.element].join(",");d=d.querySelectorAll(e+(e&&b?",":"")+b)}else d=f.all?f.all:f.getElementsByTagName("*");for(var e=d.length,j,i=0,n=g.length,c=0,m=0;f;){for(i=0;i<n;i++){b=g[i];for(c=0,m=b.convertedTypes.length;c<m;c++){if(b.mappingMode===h.attribute&&(j=f.getAttributeNode&&
f.getAttributeNode(b.convertedTypes[c]))&&j.specified)j=a.parseOptions(j.nodeValue),b.callback(f,b.types[c],j);b.mappingMode===h.element&&f.nodeName.toLowerCase()==b.convertedTypes[c]&&(j=a.getSpecifiedAttributes(f),b.callback(f,b.types[c],j))}}f=e&&d[--e]}}})();a.version="1.0.5";return a});
